#VARIABLES
version="0.0.1"
scriptPath=${0%/*}
scriptPath=`echo $scriptPath | sed 's/resources//g'`
page=$1
width=$(tput cols)
height=$(tput lines)
currently_coloring=false
color_support=$(tput colors)
if [ $color_support -gt 2 ]
	then
      color_support=true
   else
      color_support=false
fi

#######################################
#                                     #
#           FACEBOOK VARS             #
#                                     #
#######################################
user_info="https://graph.facebook.com/me"

#######################################
#                                     #
#             FUNCTIONS               #
#                                     #
#######################################

function color_start
{
	if $color_support
		then
			if $currently_coloring
				then
					color_stop
			fi
			echo -en "\033[$1""m"
			currently_coloring=true
	fi
}

function color_stop
{
	if $color_support
		then
			echo -en '\033[0m'
			currently_coloring=false
	fi
}

function header
{
	color_start "00;31;44"
	fill_screen
	color_start "1;37;44"
	LINE=$(head -1 "$scriptPath/resources/$(echo $LOGO)_logo.ascii" | tail -1);echo -n "$LINE"
	color_start "00;31;44"
	fill_screen
	color_start "1;37;44"
	LINE=$(head -2 $scriptPath/resources/$(echo $LOGO)_logo.ascii | tail -1);echo -n "$LINE"
   color_start "00;31;44"
   fill_screen
	color_start "1;37;44"
	LINE=$(head -3 $scriptPath/resources/$(echo $LOGO)_logo.ascii | tail -1);echo -n "$LINE"
   color_start "00;31;44"
   fill_screen
	color_start "1;37;44"
	LINE=$(head -4 $scriptPath/resources/$(echo $LOGO)_logo.ascii | tail -1);echo -n "$LINE"
   color_start "00;31;44"
   fill_screen
	color_start "1;37;44"
	LINE=$(head -5 $scriptPath/resources/$(echo $LOGO)_logo.ascii | tail -1);echo -n "$LINE"
   color_start "00;31;44"
   fill_screen
	fill_screen
	fill_screen
	color_stop
	newline
	newline
}

function fill_screen
{
	get_position
	for (( i=$col ; i<$width ; i++ )); do echo -n " " ; done
}

function finish_page
{
	get_position
	for (( j=($row+2) ; j<$height ; j++ )); do fill_screen;newline; done
	if [ -z "$password" ]
		then
			read -p "$action " answer
		else
			#THIS IS A PASSWORD OR SOMETHING THAT NEEDS TO BE HIDDEN
			read -s -p "$action " answer
	fi
	page_action "$answer"
}

function get_position
{
	oldstty=$(stty -g)
	stty raw -echo min 0
	echo -en "\033[6n" > /dev/tty
	IFS=';' read -r -d R -a pos
	stty $oldstty
	# change from one-based to zero based so they work with: tput cup $row $col
	row=$((${pos[0]:2} - 1))
	col=$((${pos[1]} - 1))
}

function newline
{
	echo -en "\n"
}

function center
{
	#GET STRING LENGTH
	length=`echo ${#1}`
	left=`echo $(((width/2)-(length/2)))`
	for (( i=0 ; i<$left ; i++ )); do echo -n " " ; done
	echo -n "$1"
	get_position
	for (( i=$col ; i<$width ; i++ )); do echo -n " " ; done
}

function goto
{
	$scriptPath/resources/application_run $1
}

function heading
{
	top="==========================="
	top_length=`echo ${#top}`
	center $top
	center "=                         ="
	length=`echo ${#1}`
	left=`echo $(((top_length/2)-(length/2)))`
	text=""
	for (( i=0 ; i<$left ; i++ )); do text="$text " ; done
	text="$text""$1"
	right=`echo $((top_length-(length+left+2)))`
	for (( i=0 ; i<$right ; i++ )); do text="$text " ; done
	center "=$text="
	center "=                         ="
	if [ -z "$2" ]
		then
			temp=""
		else
			length=`echo ${#2}`
	   	left=`echo $(((top_length/2)-(length/2)))`
   		text=""
   		for (( i=0 ; i<$left ; i++ )); do text="$text " ; done
   		text="$text""$2"
   		right=`echo $((top_length-(length+left+2)))`
   		for (( i=0 ; i<$right ; i++ )); do text="$text " ; done
   		center "=$text="
			center "=                         ="
	fi
	center "==========================="
	newline
	newline
	newline
	newline
}

function epoch
{
	date +%s
}

function getUserInfo
{
   userInfo=`curl -s "https://graph.facebook.com/me?access_token=$ACCESS_TOKEN"`
   export FBTerminalfirst_name=`echo $userInfo | python -c 'import json,sys;obj=json.load(sys.stdin);print obj["first_name"]'`
   export FBTerminallast_name=`echo $userInfo | python -c 'import json,sys;obj=json.load(sys.stdin);print obj["last_name"]'`
	export FBTerminalid=`echo $userInfo | python -c 'import json,sys;obj=json.load(sys.stdin);print obj["id"]'`
}

function columns
{
	if [ $1 == "end" ]
		then
			columns=false
		else
			column_count=1
			coumns=true
			columns_max=$1
			columns_margin=$((width/8))
			columns_width=$((width-(columns_margin*2)))
			columns_width=$((columns_width/columns_max))
	fi
}

function column_data
{
	if [ $column_count -gt $columns_max ]
		then
			column_count=1
	fi
	if [ $column_count -ne  $columns_max ]
		then
			#NEED THE LEFT MARGIN
			for (( i=0 ; i<$columns_margin ; i++ )); do echo -n " " ; done
			echo -n $1
			#NEED THE REST OF THE COLUMN SPACE
			length=`echo ${#1}`
			left=$((columns_width-length))
			for (( i=0 ; i<$left ; i++ )); do echo -n " " ; done
		else
			echo $1
			newline
			newline
	fi
	column_count=$((column_count+1))
}

#######################################
#                                     #
#             APPLICATION             #
#                                     #
#######################################

clear
header
if [ -f $scriptPath/resources/facebook/token.sec ]
	then
		TOKEN_EXPIRES=$(head -2 $scriptPath/resources/facebook/token.sec | tail -1);
		if [ $((`epoch`)) -lt $TOKEN_EXPIRES ] && [ $page == "login" ]
			then
				heading "Please Wait" "Loading Info"
				export ACCESS_TOKEN=$(head -1 $scriptPath/resources/facebook/token.sec | tail -1);
				getUserInfo
				clear
				header
				page="home"
		fi
fi
source "$scriptPath""/pages/""$page"".page"
finish_page
